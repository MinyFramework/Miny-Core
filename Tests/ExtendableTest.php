<?php

namespace Miny;

class FooPlugin
{

    public function bar()
    {
        return 'bar';
    }

    public function baz()
    {
        return 'baz';
    }

    public function foobar()
    {
        return 'foobar';
    }
}

/**
 * Test class for Extendable.
 * Generated by PHPUnit on 2012-08-05 at 11:01:55.
 */
class ExtendableTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Extendable
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $object = new Extendable;
        $object->addMethod('foo', function() {
            return 'foo';
        });

        $object->addMethods(new FooPlugin, array(
            'bar', 'baz'
        ));

        $this->object = $object;
    }

    public function testCall()
    {
        $this->assertEquals('foo', $this->object->foo());
        $this->assertEquals('bar', $this->object->bar());
        $this->assertEquals('baz', $this->object->baz());
    }

    /**
     * @expectedException BadMethodCallException
     * @expectedExceptionMessage Method not found: foobar
     */
    public function testCallNotFoundException()
    {
        $this->object->foobar();
    }

    /**
     * @expectedException InvalidArgumentException
     * @expectedExceptionMessage Parameter "method" must be string
     */
    public function testCallBadTypeException()
    {
        $this->object->__call(5, array());
    }

    /**
     * @expectedException InvalidArgumentException
     * @expectedExceptionMessage Parameter "method" must be string
     */
    public function testAddMethodNameException()
    {
        $this->object->addMethod(5, null);
    }

    /**
     * @expectedException InvalidArgumentException
     * @expectedExceptionMessage Callback given for method method is not callable
     */
    public function testAddMethodCallbackException()
    {
        $this->object->addMethod('method', null);
    }

    /**
     * @expectedException InvalidArgumentException
     * @expectedExceptionMessage First argument must be an object
     */
    public function testAddMethodsObjectException()
    {
        $this->object->addMethods('object', array());
    }

    /**
     * @expectedException InvalidArgumentException
     * @expectedExceptionMessage Method "foo" not found in class stdClass
     */
    public function testAddMethodsMethodException()
    {
        $this->object->addMethods(new \stdClass, array('foo'));
    }

    /**
     *
     */
    public function testSetterException()
    {
        $this->object->addSetter('foo');
        $this->object->addSetter('asd', 'setAsdMethod');
        $this->object->addSetters(array('foobar' => 'setFooBarMethod', 'baz'));

        $this->object->setFoo('bar');
        $this->object->setAsdMethod('bar');
        $this->object->setFooBarMethod('bar');
        $this->object->setBaz('bar');

        $this->assertEquals('bar', $this->object->foo);
        $this->assertEquals('bar', $this->object->asd);
        $this->assertEquals('bar', $this->object->baz);
        $this->assertEquals('bar', $this->object->foobar);
    }
}

?>
