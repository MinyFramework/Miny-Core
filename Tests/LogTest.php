<?php

namespace Miny;

/**
 * Test class for Log.
 * Generated by PHPUnit on 2012-07-29 at 12:57:31.
 */
class LogTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Log
     */
    protected $object;
    private $log_file;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $tmp = sys_get_temp_dir();
        date_default_timezone_set('UTC');
        $this->log_file = $tmp . '/log_' . date('Y_m_d') . '.log';
        $this->object   = new Log($tmp, true);

        if (is_file($this->log_file)) {
            unlink($this->log_file);
        }
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        unlink($this->log_file);
    }

    /**
     * @covers Miny\Log::write
     * @covers Miny\Log::getLogFileName
     * @covers Miny\Log::__call
     */
    public function testLog()
    {
        $this->assertEquals($this->log_file, $this->object->getLogFileName());

        $date    = date('Y-m-d H:i:s');
        $message = 'TestMessage';
        $this->object->write($message);
        $this->object->write($message, 'someLevel');
        $this->object->level('Pattern %s', 'value');

        $this->object->saveLog();

        $expected = sprintf("[%s] %s: %s\n", $date, 'info', $message);
        $expected .= sprintf("[%s] %s: %s\n", $date, 'someLevel', $message);
        $expected .= sprintf("[%s] %s: %s\n", $date, 'level', 'Pattern value');

        $this->assertEquals($expected, file_get_contents($this->log_file));
    }
}

?>
